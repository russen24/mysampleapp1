[{"D:\\Project Automation\\PERN TODO\\client\\src\\index.js":"1","D:\\Project Automation\\PERN TODO\\client\\src\\App.js":"2","D:\\Project Automation\\PERN TODO\\client\\src\\components\\InputTodo.js":"3","D:\\Project Automation\\PERN TODO\\client\\src\\components\\ListTodos.js":"4","D:\\Project Automation\\PERN TODO\\client\\src\\components\\EditTodo.js":"5"},{"size":220,"mtime":1612290507136,"results":"6","hashOfConfig":"7"},{"size":347,"mtime":1612392652870,"results":"8","hashOfConfig":"7"},{"size":1144,"mtime":1612465557086,"results":"9","hashOfConfig":"7"},{"size":1596,"mtime":1612483027702,"results":"10","hashOfConfig":"7"},{"size":2444,"mtime":1612484826809,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"nrwqz2",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"D:\\Project Automation\\PERN TODO\\client\\src\\index.js",[],["25","26"],"D:\\Project Automation\\PERN TODO\\client\\src\\App.js",[],"D:\\Project Automation\\PERN TODO\\client\\src\\components\\InputTodo.js",[],"D:\\Project Automation\\PERN TODO\\client\\src\\components\\ListTodos.js",["27"],"import React, { Fragment, useEffect, useState } from \"react\";\r\n\r\nimport EditTodo from \"./EditTodo\";\r\n\r\nconst ListTodos = () => {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n\r\n//Delete Todo\r\n\r\nconst deleteTodo = async id => {\r\n    try {\r\n        const deleteTodo = await fetch(`http://localhost:5000/todos/${id}`, {\r\n            method: \"DELETE\"\r\n        });\r\n        setTodos(todos.filter(todo => todo.todo_id !==id));\r\n    } catch (err) {\r\n        console.error(err.message);\r\n    }\r\n}\r\n\r\n//List Todo\r\n    const getTodos = async () => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:5000/todos\");\r\n            const jsonData = await response.json();\r\n\r\n            setTodos(jsonData);\r\n        } catch (err) {\r\n            console.error(err.message);\r\n            \r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getTodos();\r\n    }, []);\r\n\r\n    console.log(todos);\r\n    return <Fragment>\r\n        <table class=\"table mt-5 text-center\">\r\n    <thead>\r\n      <tr>\r\n        <th>Description</th>\r\n        <th>Edit</th>\r\n        <th>Delete</th>\r\n      </tr>\r\n    </thead>\r\n   <tbody>\r\n       {/*\r\n      <tr>\r\n        <td>John</td>\r\n        <td>Doe</td>\r\n        <td>john@example.com</td>\r\n      </tr>*/}\r\n      {todos.map(todo => (\r\n          <tr>\r\n              <td>{todo.description}</td>\r\n              <td><EditTodo todo={todo}/></td>\r\n              <td><button className=\"btn btn-danger\" onClick = {() => deleteTodo(todo.todo_id)}>Delete</button></td>\r\n          </tr>\r\n      ))}\r\n\r\n    </tbody>\r\n  </table>\r\n    </Fragment>;\r\n};\r\n\r\nexport default ListTodos;","D:\\Project Automation\\PERN TODO\\client\\src\\components\\EditTodo.js",["28"],"import React, { Fragment, useState } from \"react\";\r\n\r\nconst EditTodo = ({ todo }) => {\r\n  const [description, setDescription] = useState(todo.description);\r\n\r\n  //edit description function\r\n\r\n  const updateDescription = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const body = { description };\r\n      const response = await fetch(\r\n        `http://localhost:5000/todos/${todo.todo_id}`,\r\n        {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(body)\r\n        }\r\n      );\r\n\r\n      window.location = \"/\";\r\n    } catch (err) {\r\n      console.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-warning\"\r\n        data-toggle=\"modal\"\r\n        data-target={`#id${todo.todo_id}`}\r\n      >\r\n        Edit\r\n      </button>\r\n\r\n      {/* \r\n        id = id10\r\n      */}\r\n      <div\r\n        class=\"modal\"\r\n        id={`id${todo.todo_id}`}\r\n        onClick={() => setDescription(todo.description)}\r\n      >\r\n        <div class=\"modal-dialog\">\r\n          <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n              <h4 class=\"modal-title\">Edit Todo</h4>\r\n              <button\r\n                type=\"button\"\r\n                class=\"close\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setDescription(todo.description)}\r\n              >\r\n                &times;\r\n              </button>\r\n            </div>\r\n\r\n            <div class=\"modal-body\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                value={description}\r\n                onChange={e => setDescription(e.target.value)}\r\n              />\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-warning\"\r\n                data-dismiss=\"modal\"\r\n                onClick={e => updateDescription(e)}\r\n              >\r\n                Edit\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-danger\"\r\n                data-dismiss=\"modal\"\r\n                onClick={() => setDescription(todo.description)}\r\n              >\r\n                Close\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditTodo;",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":13,"column":15,"nodeType":"35","messageId":"36","endLine":13,"endColumn":25},{"ruleId":"33","severity":1,"message":"37","line":12,"column":13,"nodeType":"35","messageId":"36","endLine":12,"endColumn":21},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'deleteTodo' is assigned a value but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]